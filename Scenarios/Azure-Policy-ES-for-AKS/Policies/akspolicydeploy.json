{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "allowedContainerImagesRegex": {
      "type": "string",
      "defaultValue": "(.*).azurecr.io/.+$|mcr.microsoft.com/.+$|helm-charts.newrelic.com/.+$|registry.hub.docker.com/library/.+$|(.*).twistlock.com/.+$",
      "metadata": {
        "description": "regex identifying the allowed container image repo domains."
      }
    },
    "forbiddenSysctls": {
      "type": "array",
      "defaultValue": [
        "kernel.msg*"
      ],
      "metadata": {
        "displayName": "Forbidden sysctls",
        "description": "The list of plain sysctl names or sysctl patterns which end with *. The string * matches all sysctls. For more information, visit https://aka.ms/k8s-policy-sysctl-interfaces."
      }
    },
    "allowedContainerPortsList": {
      "type": "array",
      "defaultValue": [
        "443",
        "80"
      ],
      "metadata": {
        "displayName": "Allowed container ports list",
        "description": "The list of container ports allowed in a Kubernetes cluster. Array only accepts strings. Example: [\"443\", \"80\"]"
      }
    },
    "allowedServicePortsList": {
      "type": "array",
      "defaultValue": [
        "443",
        "80"
      ],
      "metadata": {
        "displayName": "Allowed service ports list",
        "description": "The list of service ports allowed in a Kubernetes cluster. Array only accepts strings. Example: [\"443\", \"80\"]"
      }
    },
    "labelsList": {
      "type": "array",
      "defaultValue": [
      ],
      "metadata": {
        "displayName": "List of labels",
        "description": "The list of labels to be specified on Pods in a Kubernetes cluster."
      }
    },
    "allowHostNetwork": {
      "type": "bool",
      "metadata": {
        "displayName": "Allow host network usage",
        "description": "Set this value to true if pod is allowed to use host network otherwise false."
      },
      "defaultValue": true
    },
    "minPort": {
      "type": "int",
      "metadata": {
        "displayName": "Min host port",
        "description": "The minimum value in the allowable host port range that pods can use in the host network namespace."
      },
      "defaultValue": 1
    },
    "maxPort": {
      "type": "int",
      "metadata": {
        "displayName": "Max host port",
        "description": "The maximum value in the allowable host port range that pods can use in the host network namespace."
      },
      "defaultValue": 65535
    },
    "allowedVolumeTypes": {
      "type": "array",
      "metadata": {
        "displayName": "Allowed volume types",
        "description": "The list of volume types that can be used by a pod. Provide empty list as input to block everything."
      },
      "defaultValue": [
        "configMap",
        "emptyDir",
        "secret",
        "persistentVolumeClaim"
      ]
    },
    "allowedProfiles": {
      "type": "array",
      "metadata": {
        "displayName": "Allowed seccomp profiles",
        "description": "The list of seccomp profiles that containers are allowed to use. E.g. 'runtime/default;docker/default'. Provide empty list as input to block everything."
      },
      "defaultValue": [
        "runtime/default"
      ]
    },
    "allowedCapabilities": {
      "type": "array",
      "metadata": {
        "displayName": "Allow capabilities",
        "description": "List of capabilities that containers are able to use"
      },
      "defaultValue": [
        "CHOWN",
        "DAC_OVERRIDE",
        "FSETID",
        "FOWNER",
        "MKNOD",
        "NET_RAW",
        "SETGID",
        "SETUID",
        "SETFCAP",
        "SETPCAP",
        "NET_BIND_SERVICE",
        "SYS_CHROOT",
        "KILL",
        "AUDIT_WRITE"
      ]
    },
    "disallowedCapabilities": {
      "type": "array",
      "metadata": {
        "displayName": "Blocked capabilities",
        "description": "List of capabilities that containers are not able to use"
      },
      "defaultValue": []
    },
    "ManagementGroupId":{
      "type": "string"
      
    },
    "AKS_Private_Clusters_should_enabled_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },
    "not_allow_privileged_containers_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "not_allow_container_privilege_escalation_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "approved_host_network_and_port_range_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "not_share_host_process_ID_or_host_IPC_namespace_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "only_use_allowed_capabilities_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "only_use_allowed_volume_types_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "only_run_with_approved_user_and_group_IDs_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "only_use_allowed_seccomp_profiles_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "run_with_a_read_only_root_file_system_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "CPU_and_memory_resource_limits_do_not_exceed.effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "allowed_container_images_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_not_use_default_namespace_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_not_use_specific_security_capabilities_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_not_grant_CAP_SYS_ADMIN_security_capabilities_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_disable_automounting_API_credentials_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_nodepool_temp_disk_encrypted_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },
    "AKS_should_use_internal_load_balancers_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_should_accessible_only_over_HTTPS_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_should_only_use_allowed_external_IPs_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "Audit"
    },
    "AKS_should_listen_only_on_allowed_ports_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_pods_should_use_specified_labels_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_pods_containers_should_only_use_allowed_SELinux_options_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_pod_hostPath_volumes_should_only_use_allowed_host_paths_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_pod_FlexVolume_volumes_should_only_use_allowed_drivers_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_containers_should_only_use_allowed_ProcMountType_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_containers_should_only_listen_on_allowed_ports_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_containers_should_not_use_forbidden_sysctl_interfaces_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "Both_OS_and_data_disks_AKS_should_be_encrypted_by_customer_managed_key_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },
    "Azure_Policy_Add-on_AKS_should_be_installed_and_enabled_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },
    "AKS_Authorized_IP_range_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },
    "AKS_cluster_containers_only_use_allowed_AppArmor_profiles_effect":{
      "type": "string",
      "allowedValues": [
        "audit",
        "deny",
        "disabled"
      ],
      "defaultValue": "audit"
    },
    "AKS_should_upgraded_non-vulnerable_kubernetes_version_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },
    "RBAC_should_used_on_AKS_effect":{
      "type": "string",
      "allowedValues": [
        "Audit",
        "Deny",
        "Disabled"
      ],
      "defaultValue": "Audit"
    },

    "not_allow_privileged_containers_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]
    },
    "not_allow_container_privilege_escalation_excludedNamespaces":{
        "type": "array",
        "defaultValue": [
          "kube-system",
          "gatekeeper-system",
          "azure-arc"
        ]   
    },
    "approved_host_network_and_port_range_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]      
    },
    "not_share_host_process_ID_or_host_IPC_namespace_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "only_use_allowed_capabilities_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "only_use_allowed_volume_types_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "only_run_with_approved_user_and_group_IDs_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "only_use_allowed_seccomp_profiles_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "run_with_a_read_only_root_file_system_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "CPU_and_memory_resource_limits_do_not_exceed_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "allowed_container_images_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_not_use_default_namespace_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_not_use_specific_security_capabilities_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_not_grant_CAP_SYS_ADMIN_security_capabilities_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_disable_automounting_API_credentials_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_should_use_internal_load_balancers_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_should_accessible_only_over_HTTPS_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_should_only_use_allowed_external_IPs_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_should_listen_only_on_allowed_ports_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_pods_should_use_specified_labels_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_pods_containers_should_only_use_allowed_SELinux_options_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_pod_hostPath_volumes_should_only_use_allowed_host_paths_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_pod_FlexVolume_volumes_should_only_use_allowed_drivers_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_containers_should_only_use_allowed_ProcMountType_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_containers_should_only_listen_on_allowed_ports_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_containers_should_not_use_forbidden_sysctl_interfaces_excludedNamespaces":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    },
    "AKS_cluster_containers_only_use_allowed_AppArmor_profiles_excludeNameSpace":{
      "type": "array",
      "defaultValue": [
        "kube-system",
        "gatekeeper-system",
        "azure-arc"
      ]     
    }
  },
  "variables": {
    "mgId": "[tenantResourceId('Microsoft.Management/managementGroups/', parameters('ManagementGroupId'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_Pvt_Cluster_enabled",
      "apiVersion": "2020-03-01",
      "comments": "Azure Kubernetes Service Private Clusters should be enabled",
      "properties": {
        "displayName": "[ reference('/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/040732e8-d947-40b8-95d6-854c95024bf8",
        "parameters": {
          "effect": {
            "value": "[parameters('AKS_Private_Clusters_should_enabled_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "Notallow_privileged_cnts",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster should not allow privileged containers",
      "properties": {
        "displayName": "[ reference('/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",  
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('not_allow_privileged_containers_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('not_allow_privileged_containers_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "NotAllow_prvlg_esclation",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes clusters should not allow container privilege escalation",
      "properties": {
        "displayName": "[ reference('/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('not_allow_container_privilege_escalation_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('not_allow_container_privilege_escalation_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "poduse_apprvdhost_NWport",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pods should only use approved host network and port range",
      "properties": {
        "displayName": "[ reference('/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/82985f06-dc18-4a48-bc1c-b9f4f0098cfe",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('approved_host_network_and_port_range_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('approved_host_network_and_port_range_effect')]"
          },
          "allowHostNetwork": {
            "value": "[parameters('allowHostNetwork')]"
          },
          "minPort": {
            "value": "[parameters('minPort')]"
          },
          "maxPort": {
            "value": "[parameters('maxPort')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "nthost_processID_IPCNS",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should not share host process ID or host IPC namespace",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/47a1ee2f-2a2a-4576-bf2a-e0e36709c2b8",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('not_share_host_process_ID_or_host_IPC_namespace_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('not_share_host_process_ID_or_host_IPC_namespace_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "use_allowed_capabilities",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should only use allowed capabilities",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/c26596ff-4d70-4e6a-9a30-c2506bd2f80c",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('only_use_allowed_capabilities_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('only_use_allowed_capabilities_effect')]"
          },
          "allowedCapabilities": {
            "value": [
              "CHOWN",
              "DAC_OVERRIDE",
              "FSETID",
              "FOWNER",
              "MKNOD",
              "NET_RAW",
              "SETGID",
              "SETUID",
              "SETFCAP",
              "SETPCAP",
              "NET_BIND_SERVICE",
              "SYS_CHROOT",
              "KILL",
              "AUDIT_WRITE"
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "use_allowed_volm_typres",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pods should only use allowed volume types",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/16697877-1118-4fb1-9b65-9898ec2509ec', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/16697877-1118-4fb1-9b65-9898ec2509ec",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('only_use_allowed_volume_types_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('only_use_allowed_volume_types_effect')]"
          },
          "allowedVolumeTypes": {
            "value": "[parameters('allowedVolumeTypes')]"
          }
        }
      }
    },    
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "run_apprvd_usr_grp_IDs",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pods and containers should only run with approved user and group IDs",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f06ddb64-5fa3-4b77-b166-acb36f7f6042",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('only_run_with_approved_user_and_group_IDs_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('only_run_with_approved_user_and_group_IDs_effect')]"
          },
          "runAsUserRule": {
            "value": "MustRunAs"
          },
          "runAsUserRanges": {
            "value": {
              "ranges": [
                {
                  "min": 1,
                  "max": 65535
                }
              ]
            }
          },
          "runAsGroupRule": {
            "value": "MustRunAs"
          },
          "runAsGroupRanges": {
            "value": {
              "ranges": [
                {
                  "min": 1,
                  "max": 65535
                }
              ]
            }
          },
          "supplementalGroupsRule": {
            "value": "MustRunAs"
          },
          "supplementalGroupsRanges": {
            "value": {
              "ranges": [
                {
                  "min": 1,
                  "max": 65535
                }
              ]
            }
          },
          "fsGroupRule": {
            "value": "MustRunAs"
          },
          "fsGroupRanges": {
            "value": {
              "ranges": [
                {
                  "min": 1,
                  "max": 65535
                }
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "allowed_seccomp_profiles",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should only use allowed seccomp profiles",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/975ce327-682c-4f2e-aa46-b9598289b86c', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/975ce327-682c-4f2e-aa46-b9598289b86c",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('only_use_allowed_seccomp_profiles_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('only_use_allowed_seccomp_profiles_effect')]"
          },
          "allowedProfiles": {
            "value": "[parameters('allowedProfiles')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "run_readonly_file_sys",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should run with a read only root file system",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/df49d893-a74c-421d-bc95-c663042e5b80",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('run_with_a_read_only_root_file_system_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('run_with_a_read_only_root_file_system_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "CPU_Mi_ntexceed_limit",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers CPU and memory resource limits should not exceed the specified limits",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e345eecc-fa47-480f-9e88-67dcc122b164",
        "parameters": {
          "cpuLimit": {
            "value": "4000m"
          },
          "memoryLimit": {
            "value": "12228Mi"
          },
          "excludedNamespaces": {
            "value": "[parameters('CPU_and_memory_resource_limits_do_not_exceed_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('CPU_and_memory_resource_limits_do_not_exceed.effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "only_allowed_cnt_image",
      "apiVersion": "2020-03-01",
      "comments": "Ensure only allowed container images in Kubernetes cluster",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/febd0533-8e55-448f-b837-bd0e06f16469",
        "parameters": {
          "allowedContainerImagesRegex": {
            "value": "[parameters('allowedContainerImagesRegex')]"
          },
          "excludedNamespaces": {
            "value": "[parameters('allowed_container_images_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('allowed_container_images_effect')]"
          }
        }
      }
    }, 
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "not_use_default_NS",
      "apiVersion": "2020-03-01",
      "comments": "[Preview]: Kubernetes clusters should not use the default namespace",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/9f061a12-e40d-4183-a00e-171812443373",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_not_use_default_namespace_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_not_use_default_namespace_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "not_use_spc_sec_cpbiltes",
      "apiVersion": "2020-03-01",
      "comments": "[Preview]: Kubernetes clusters should not use specific security capabilities",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/a27c700f-8a22-44ec-961c-41625264370b', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/a27c700f-8a22-44ec-961c-41625264370b",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_not_use_specific_security_capabilities_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_not_use_specific_security_capabilities_effect')]"
          },
          "disallowedCapabilities": {
            "value": "[parameters('disallowedCapabilities')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "not_grnt_sec_cpbiltes",
      "apiVersion": "2020-03-01",
      "comments": "[Preview]: Kubernetes clusters should not grant CAP_SYS_ADMIN security capabilities",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d2e7ea85-6b44-4317-a0be-1b951587f626",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_not_grant_CAP_SYS_ADMIN_security_capabilities_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_not_grant_CAP_SYS_ADMIN_security_capabilities_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "disable_automount_API",
      "apiVersion": "2020-03-01",
      "comments": "[Preview]: Kubernetes clusters should disable automounting API credentials",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/423dd1ba-798e-40e4-9c4d-b6902674b423",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_disable_automounting_API_credentials_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_disable_automounting_API_credentials_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "temp_cache_node_encrpt",
      "apiVersion": "2020-03-01",
      "comments": "Temp disks and cache for agent node pools in Azure Kubernetes Service clusters should be encrypted at host",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/41425d9f-d1a5-499a-9932-f8ed8453932c', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/41425d9f-d1a5-499a-9932-f8ed8453932c",
        "parameters": {
          "effect": {
            "value": "[parameters('AKS_nodepool_temp_disk_encrypted_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_should_use_ILB",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes clusters should use internal load balancers",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/3fc4dc25-5baf-40d8-9b05-7fe74c1bc64e', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/3fc4dc25-5baf-40d8-9b05-7fe74c1bc64e",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_should_use_internal_load_balancers_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_should_use_internal_load_balancers_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_access_only_HTTPS",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes clusters should be accessible only over HTTPS",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_should_accessible_only_over_HTTPS_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_should_accessible_only_over_HTTPS_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_only_allow_EIPs",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster services should only use allowed external IPs",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/d46c275d-1680-448d-b2ec-e495a3b6cc89', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/d46c275d-1680-448d-b2ec-e495a3b6cc89",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_should_only_use_allowed_external_IPs_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_should_only_use_allowed_external_IPs_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_only_allowed_ports",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster services should listen only on allowed ports",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/233a2a17-77ca-4fb1-9b6b-69223d272a44",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_should_listen_only_on_allowed_ports_excludedNamespaces')]"
          },
          "allowedServicePortsList": {
            "value": "[parameters('allowedServicePortsList')]"
          },
          "effect": {
            "value": "[parameters('AKS_should_listen_only_on_allowed_ports_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "pod_shuld_specfic_labels",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pods should use specified labels",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/46592696-4c7b-4bf3-9e45-6c2763bdc0a6', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/46592696-4c7b-4bf3-9e45-6c2763bdc0a6",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_pods_should_use_specified_labels_excludedNamespaces')]"
          },
          "labelsList": {
            "value": "[parameters('labelsList')]"
          },
          "effect": {
            "value": "[parameters('AKS_pods_should_use_specified_labels_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "use_allwd_SELinux_option",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pods and containers should only use allowed SELinux options",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/e1e6c427-07d9-46ab-9689-bfa85431e636', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/e1e6c427-07d9-46ab-9689-bfa85431e636",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_pods_containers_should_only_use_allowed_SELinux_options_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_pods_containers_should_only_use_allowed_SELinux_options_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "pod_useallowed_host_path",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pod hostPath volumes should only use allowed host paths",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/098fc59e-46c7-4d99-9b16-64990e543d75",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_pod_hostPath_volumes_should_only_use_allowed_host_paths_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_pod_hostPath_volumes_should_only_use_allowed_host_paths_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "pod_vlms_useallwd_driver",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster pod FlexVolume volumes should only use allowed drivers",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/f4a8fce0-2dd5-4c21-9a36-8f0ec809d663', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f4a8fce0-2dd5-4c21-9a36-8f0ec809d663",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_pod_FlexVolume_volumes_should_only_use_allowed_drivers_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_pod_FlexVolume_volumes_should_only_use_allowed_drivers_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_allwed_ProcMountType",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should only use allowed ProcMountType",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/f85eb0dd-92ee-40e9-8a76-db25a507d6d3', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/f85eb0dd-92ee-40e9-8a76-db25a507d6d3",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_containers_should_only_use_allowed_ProcMountType_excludedNamespaces')]"
          },
          "effect": {
            "value": "[parameters('AKS_containers_should_only_use_allowed_ProcMountType_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "listen_on_allowed_ports",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should only listen on allowed ports",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/440b515e-a580-421e-abeb-b159a61ddcbc', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/440b515e-a580-421e-abeb-b159a61ddcbc",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_containers_should_only_listen_on_allowed_ports_excludedNamespaces')]"
          },
          "allowedContainerPortsList": {
            "value": "[parameters('allowedContainerPortsList')]"
          },
          "effect": {
            "value": "[parameters('AKS_containers_should_only_listen_on_allowed_ports_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "frbidden_sysctl_intrface",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should not use forbidden sysctl interfaces",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/56d0a13f-712f-466b-8416-56fb354fb823', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/56d0a13f-712f-466b-8416-56fb354fb823",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_containers_should_not_use_forbidden_sysctl_interfaces_excludedNamespaces')]"
          },
          "forbiddenSysctls": {
            "value": "[parameters('forbiddenSysctls')]"
          },
          "effect": {
            "value": "[parameters('AKS_containers_should_not_use_forbidden_sysctl_interfaces_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "OS_DD_encrptd_mgmt_keys",
      "apiVersion": "2020-03-01",
      "comments": "Both operating systems and data disks in Azure Kubernetes Service clusters should be encrypted by customer-managed keys",
      "properties": {
        "displayName": "Both_OS_and_data_disks_AKS_should_be_encrypted_by_customer-managed_key",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67",
        "parameters": {
          "effect": {
            "value": "[parameters('Both_OS_and_data_disks_AKS_should_be_encrypted_by_customer_managed_key_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "Policy_Add_on_installed",
      "apiVersion": "2020-03-01",
      "comments": "Azure Policy Add-on for Kubernetes service (AKS) should be installed and enabled on your clusters",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a15ec92-a229-4763-bb14-0ea34a568f8d",
        "parameters": {
          "effect": {
            "value": "[parameters('Azure_Policy_Add-on_AKS_should_be_installed_and_enabled_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "IP_range_should_defined",
      "apiVersion": "2020-03-01",
      "comments": "Authorized IP ranges should be defined on Kubernetes Services",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea', '2020-09-01').displayName]",
        "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0e246bcf-5f6f-4f87-bc6f-775d4712c7ea",
        "parameters": {
          "effect": {
            "value": "[parameters('AKS_Authorized_IP_range_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "should_allowed_AppArmor",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes cluster containers should only use allowed AppArmor profiles",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e', '2020-09-01').displayName]",
       "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/511f5417-5d12-434d-ab2e-816901e72a5e",
        "parameters": {
          "excludedNamespaces": {
            "value": "[parameters('AKS_cluster_containers_only_use_allowed_AppArmor_profiles_excludeNameSpace')]"
          },
          "effect": {
            "value": "[parameters('AKS_cluster_containers_only_use_allowed_AppArmor_profiles_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "AKS_non-vulnerable_vrson",
      "apiVersion": "2020-03-01",
      "comments": "Kubernetes Services should be upgraded to a non-vulnerable Kubernetes version",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/fb893a29-21bb-418c-a157-e99480ec364c', '2020-09-01').displayName]",
       "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fb893a29-21bb-418c-a157-e99480ec364c",
        "parameters": {
          "effect": {
            "value": "[parameters('AKS_should_upgraded_non-vulnerable_kubernetes_version_effect')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "name": "RBAC_should_use_AKS",
      "apiVersion": "2020-03-01",
      "comments": "Role-Based Access Control (RBAC) should be used on Kubernetes Services",
      "properties": {
        "displayName": "[reference('/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457', '2020-09-01').displayName]",
       "scope": "[variables('mgId')]",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ac4a19c2-fa67-49b4-8ae5-0b2e78c49457",
        "parameters": {
          "effect": {
            "value": "[parameters('RBAC_should_used_on_AKS_effect')]"
          }
        }
      }
    }  
  ],
  "outputs": {}
}