{

  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location of AKS resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GiB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.19.11",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "enableRBAC": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off of RBAC."
      }
    },
    "vmssNodePool": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean flag to turn on and off of virtual machine scale sets"
      }
    },
    "windowsProfile": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean flag to turn on and off of virtual machine scale sets"
      }
    },
    "adminGroupObjectIDs": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of AAD group object ids to give administrative access."
      }
    },
    "enablePrivateCluster": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable private network access to the Kubernetes cluster."
      }
    },
    "enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off http application routing."
      }
    },
    "enableAzurePolicy": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Boolean flag to turn on and off Azure Policy addon."
      }
    },
    "enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Boolean flag to turn on and off omsagent addon."
      }
    },
    "workspaceRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "Specify the region for your OMS workspace."
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Specify the name of the OMS workspace."
      }
    },
    "omsSku": {
      "type": "string",
      "defaultValue": "standalone",
      "allowedValues": [
        "free",
        "standalone",
        "pernode"
      ],
      "metadata": {
        "description": "Select the SKU for your workspace."
      }
    },
    "acrName": {
      "type": "string",
      "metadata": {
        "description": "Specify the name of the Azure Container Registry."
      }
    },
    "acrResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group the container registry is associated with."
      }
    },
    "guidValueac": {
      "type": "string",
      "metadata": {
        "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
      },
      "defaultValue": "[newGuid()]"
    },
    "guidValuevr": {
      "type": "string",
      "metadata": {
        "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
      },
      "defaultValue": "[newGuid()]"
    },
    "guidValuelr": {
      "type": "string",
      "metadata": {
        "description": "The unique id used in the role assignment of the kubernetes service to the container registry service. It is recommended to use the default value."
      },
      "defaultValue": "[newGuid()]"
    },

    "networkPolicy": {
      "type": "string",
      "metadata": {
        "description": "Network policy used for building Kubernetes network."
      }
    },
    "vnetSubnetID": {
      "type": "string",
      "metadata": {
        "description": "Resource ID of virtual network subnet used for nodes and/or pods IP assignment."
      }
    },
    "serviceCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2021-02-01",
      "dependsOn": [],
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[parameters('resourceName')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": "[parameters('enableRBAC')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "systempool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": 1,
            "enableAutoScaling": true,
            "minCount": 1,
            "maxCount": 2,
            "vmSize": "Standard_DS2_v2",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "mode": "System",
            "maxPods": 50,
            "availabilityZones": [],
            "vnetSubnetID": "[parameters('vnetSubnetID')]"
          },
          {
            "name": "userpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": 1,
            "enableAutoScaling": true,
            "minCount": 1,
            "maxCount": 2,
            "vmSize": "Standard_DS2_v2",
            "osType": "Linux",
            "storageProfile": "ManagedDisks",
            "type": "VirtualMachineScaleSets",
            "mode": "user",
            "maxPods": 50,
            "availabilityZones": [],
            "vnetSubnetID": "[parameters('vnetSubnetID')]"
          }

        ],
        "networkProfile": {
          "loadBalancerSku": "standard",
          "networkPlugin": "[parameters('networkPlugin')]",
          "networkPolicy": "[parameters('networkPolicy')]",
          "serviceCidr": "[parameters('serviceCidr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        },
        "aadProfile": {
          "managed": true,
          "adminGroupObjectIDs": "[parameters('adminGroupObjectIDs')]"
        },
        "apiServerAccessProfile": {
          "enablePrivateCluster": "[parameters('enablePrivateCluster')]"
        },
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "azurepolicy": {
            "enabled": "[parameters('enableAzurePolicy')]"
          },
          "omsAgent": {
            "enabled": "[parameters('enableOmsAgent')]",
            "config": {
              "logAnalyticsWorkspaceResourceID": "[concat(resourceGroup().id,'/providers/microsoft.operationalinsights/workspaces/',parameters('workspaceName'))]"
            }
          }
        }
      },
      "tags": {},
      "identity": {
        "type": "SystemAssigned"
      }
    },
    // {
    //     "type": "Microsoft.Resources/deployments",
    //     "name": "SolutionDeployment-20210804214030",
    //     "apiVersion": "2017-05-10",
    //     "resourceGroup": "[resourceGroup().name]",
    //     "subscriptionId": "[subscription().subscriptionId]",
    //     "properties": {
    //         "mode": "Incremental",
    //         "template": {
    //             "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    //             "contentVersion": "1.0.0.0",
    //             "parameters": {},
    //             "variables": {},
    //             "resources": [
    //                 {
    //                     "type": "Microsoft.OperationalInsights/workspaces",
    //                     "name": "[parameters('workspaceName')]",
    //                     "apiVersion": "2020-08-01",
    //                     "location": "[resourceGroup().location]",
    //                     "properties": {
    //                         "sku": {
    //                             "name": "pergb2018"
    //                         },
    //                         "retentionInDays": "120",
    //                         "features": {
    //                             "searchVersion": 1,
    //                             "legacy": 0,
    //                             "enableLogAccessUsingOnlyResourcePermissions": true
    //                         }
    //                     }
    //                 }
    //             ]

    //         }
    //     },
    //     "dependsOn": []
    // },
    {
      "name": "ConnectAKStoACR-84f34447-65d9-4d7d-b061-7a9ac4b41039",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[resourceGroup().name]",
      "dependsOn": [
        "[concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
            {
              "apiVersion": "2018-09-01-preview",
              "type": "Microsoft.ContainerRegistry/registries/providers/roleAssignments",
              "name": "[concat(parameters('acrName'), '/Microsoft.Authorization/', parameters('guidValueac'))]",
              "properties": {
                "principalId": "[reference(parameters('resourceName'), '2021-02-01').identityProfile.kubeletidentity.objectId]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "scope": "[resourceId(parameters('acrResourceGroup'),'Microsoft.ContainerRegistry/registries/', parameters('acrName'))]"
              }
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterMonitoringMetricPulisherRoleAssignmentDepl-20210804214030",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[resourceGroup().name]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.ContainerService/managedClusters/providers/roleAssignments",
              "apiVersion": "2018-01-01-preview",
              "name": "[concat(parameters('resourceName'),'/Microsoft.Authorization/', parameters('guidValuelr'))]",
              "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                "principalId": "[reference(parameters('resourceName')).addonProfiles.omsAgent.identity.objectId]",
                "scope": "[concat(resourceGroup().id,'/providers/Microsoft.ContainerService/managedClusters/', parameters('resourceName'))]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "ClusterSubnetRoleAssignmentDeployment-20210804214030",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[resourceGroup().name]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks/subnets/providers/roleAssignments",
              "apiVersion": "2018-09-01-preview",
              "name": "[concat(split(parameters('vnetSubnetID'),'/')[8],'/',split(parameters('vnetSubnetID'),'/')[10],'/Microsoft.Authorization/',parameters('guidValuevr'))]",
              "properties": {
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                "principalId": "[reference(parameters('resourceName'),'2021-02-01','Full').identity.principalId]",
                "scope": "[parameters('vnetSubnetID')]"
              }
            }
          ]
        }
      },
      "dependsOn": []
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('resourceName'))).privateFQDN]"
    }
  }
}